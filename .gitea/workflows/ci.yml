---
name: CI
on:
  pull_request:
    paths-ignore:
    - "**.md"
  push:
    branches:
    - master
    paths-ignore:
    - "**.md"
  schedule:
  - cron: 0 0 * * *
jobs:
  img-master:
    runs-on: ubuntu-latest
    environment:
      emacs: master
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-master-ci:
    runs-on: ubuntu-latest
    needs: img-master
    environment:
      emacs: master-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-master-ci-cask:
    runs-on: ubuntu-latest
    needs: img-master-ci
    environment:
      emacs: master-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-master-ci-eask:
    runs-on: ubuntu-latest
    needs: img-master-ci
    environment:
      emacs: master-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-master-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-master-ci
    environment:
      emacs: master-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-master-ci-keg:
    runs-on: ubuntu-latest
    needs: img-master-ci
    environment:
      emacs: master-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-master-alpine:
    runs-on: ubuntu-latest
    environment:
      emacs: master-alpine
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-master-alpine-ci:
    runs-on: ubuntu-latest
    needs: img-master-alpine
    environment:
      emacs: master-alpine-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-master-alpine-ci-cask:
    runs-on: ubuntu-latest
    needs: img-master-alpine-ci
    environment:
      emacs: master-alpine-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-master-alpine-ci-eask:
    runs-on: ubuntu-latest
    needs: img-master-alpine-ci
    environment:
      emacs: master-alpine-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-master-alpine-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-master-alpine-ci
    environment:
      emacs: master-alpine-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-master-alpine-ci-keg:
    runs-on: ubuntu-latest
    needs: img-master-alpine-ci
    environment:
      emacs: master-alpine-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-29-1:
    runs-on: ubuntu-latest
    environment:
      emacs: '29.1'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-29-1-ci:
    runs-on: ubuntu-latest
    needs: img-29-1
    environment:
      emacs: 29.1-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-29-1-ci-cask:
    runs-on: ubuntu-latest
    needs: img-29-1-ci
    environment:
      emacs: 29.1-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-29-1-ci-eask:
    runs-on: ubuntu-latest
    needs: img-29-1-ci
    environment:
      emacs: 29.1-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-29-1-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-29-1-ci
    environment:
      emacs: 29.1-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-29-1-ci-keg:
    runs-on: ubuntu-latest
    needs: img-29-1-ci
    environment:
      emacs: 29.1-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-29-1-alpine:
    runs-on: ubuntu-latest
    environment:
      emacs: 29.1-alpine
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-29-1-alpine-ci:
    runs-on: ubuntu-latest
    needs: img-29-1-alpine
    environment:
      emacs: 29.1-alpine-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-29-1-alpine-ci-cask:
    runs-on: ubuntu-latest
    needs: img-29-1-alpine-ci
    environment:
      emacs: 29.1-alpine-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-29-1-alpine-ci-eask:
    runs-on: ubuntu-latest
    needs: img-29-1-alpine-ci
    environment:
      emacs: 29.1-alpine-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-29-1-alpine-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-29-1-alpine-ci
    environment:
      emacs: 29.1-alpine-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-29-1-alpine-ci-keg:
    runs-on: ubuntu-latest
    needs: img-29-1-alpine-ci
    environment:
      emacs: 29.1-alpine-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-2:
    runs-on: ubuntu-latest
    environment:
      emacs: '28.2'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-2-ci:
    runs-on: ubuntu-latest
    needs: img-28-2
    environment:
      emacs: 28.2-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-2-ci-cask:
    runs-on: ubuntu-latest
    needs: img-28-2-ci
    environment:
      emacs: 28.2-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-2-ci-eask:
    runs-on: ubuntu-latest
    needs: img-28-2-ci
    environment:
      emacs: 28.2-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-2-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-28-2-ci
    environment:
      emacs: 28.2-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-2-ci-keg:
    runs-on: ubuntu-latest
    needs: img-28-2-ci
    environment:
      emacs: 28.2-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-2-alpine:
    runs-on: ubuntu-latest
    environment:
      emacs: 28.2-alpine
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-2-alpine-ci:
    runs-on: ubuntu-latest
    needs: img-28-2-alpine
    environment:
      emacs: 28.2-alpine-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-2-alpine-ci-cask:
    runs-on: ubuntu-latest
    needs: img-28-2-alpine-ci
    environment:
      emacs: 28.2-alpine-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-2-alpine-ci-eask:
    runs-on: ubuntu-latest
    needs: img-28-2-alpine-ci
    environment:
      emacs: 28.2-alpine-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-2-alpine-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-28-2-alpine-ci
    environment:
      emacs: 28.2-alpine-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-2-alpine-ci-keg:
    runs-on: ubuntu-latest
    needs: img-28-2-alpine-ci
    environment:
      emacs: 28.2-alpine-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-1:
    runs-on: ubuntu-latest
    environment:
      emacs: '28.1'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-1-ci:
    runs-on: ubuntu-latest
    needs: img-28-1
    environment:
      emacs: 28.1-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-1-ci-cask:
    runs-on: ubuntu-latest
    needs: img-28-1-ci
    environment:
      emacs: 28.1-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-1-ci-eask:
    runs-on: ubuntu-latest
    needs: img-28-1-ci
    environment:
      emacs: 28.1-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-1-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-28-1-ci
    environment:
      emacs: 28.1-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-1-ci-keg:
    runs-on: ubuntu-latest
    needs: img-28-1-ci
    environment:
      emacs: 28.1-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-1-alpine:
    runs-on: ubuntu-latest
    environment:
      emacs: 28.1-alpine
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-1-alpine-ci:
    runs-on: ubuntu-latest
    needs: img-28-1-alpine
    environment:
      emacs: 28.1-alpine-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-1-alpine-ci-cask:
    runs-on: ubuntu-latest
    needs: img-28-1-alpine-ci
    environment:
      emacs: 28.1-alpine-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-1-alpine-ci-eask:
    runs-on: ubuntu-latest
    needs: img-28-1-alpine-ci
    environment:
      emacs: 28.1-alpine-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-1-alpine-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-28-1-alpine-ci
    environment:
      emacs: 28.1-alpine-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-28-1-alpine-ci-keg:
    runs-on: ubuntu-latest
    needs: img-28-1-alpine-ci
    environment:
      emacs: 28.1-alpine-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-2:
    runs-on: ubuntu-latest
    environment:
      emacs: '27.2'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-2-ci:
    runs-on: ubuntu-latest
    needs: img-27-2
    environment:
      emacs: 27.2-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-2-ci-cask:
    runs-on: ubuntu-latest
    needs: img-27-2-ci
    environment:
      emacs: 27.2-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-2-ci-eask:
    runs-on: ubuntu-latest
    needs: img-27-2-ci
    environment:
      emacs: 27.2-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-2-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-27-2-ci
    environment:
      emacs: 27.2-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-2-ci-keg:
    runs-on: ubuntu-latest
    needs: img-27-2-ci
    environment:
      emacs: 27.2-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-2-alpine:
    runs-on: ubuntu-latest
    environment:
      emacs: 27.2-alpine
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-2-alpine-ci:
    runs-on: ubuntu-latest
    needs: img-27-2-alpine
    environment:
      emacs: 27.2-alpine-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-2-alpine-ci-cask:
    runs-on: ubuntu-latest
    needs: img-27-2-alpine-ci
    environment:
      emacs: 27.2-alpine-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-2-alpine-ci-eask:
    runs-on: ubuntu-latest
    needs: img-27-2-alpine-ci
    environment:
      emacs: 27.2-alpine-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-2-alpine-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-27-2-alpine-ci
    environment:
      emacs: 27.2-alpine-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-2-alpine-ci-keg:
    runs-on: ubuntu-latest
    needs: img-27-2-alpine-ci
    environment:
      emacs: 27.2-alpine-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-1:
    runs-on: ubuntu-latest
    environment:
      emacs: '27.1'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-1-ci:
    runs-on: ubuntu-latest
    needs: img-27-1
    environment:
      emacs: 27.1-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-1-ci-cask:
    runs-on: ubuntu-latest
    needs: img-27-1-ci
    environment:
      emacs: 27.1-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-1-ci-eask:
    runs-on: ubuntu-latest
    needs: img-27-1-ci
    environment:
      emacs: 27.1-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-1-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-27-1-ci
    environment:
      emacs: 27.1-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-1-ci-keg:
    runs-on: ubuntu-latest
    needs: img-27-1-ci
    environment:
      emacs: 27.1-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-1-alpine:
    runs-on: ubuntu-latest
    environment:
      emacs: 27.1-alpine
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-1-alpine-ci:
    runs-on: ubuntu-latest
    needs: img-27-1-alpine
    environment:
      emacs: 27.1-alpine-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-1-alpine-ci-cask:
    runs-on: ubuntu-latest
    needs: img-27-1-alpine-ci
    environment:
      emacs: 27.1-alpine-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-1-alpine-ci-eask:
    runs-on: ubuntu-latest
    needs: img-27-1-alpine-ci
    environment:
      emacs: 27.1-alpine-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-1-alpine-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-27-1-alpine-ci
    environment:
      emacs: 27.1-alpine-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-27-1-alpine-ci-keg:
    runs-on: ubuntu-latest
    needs: img-27-1-alpine-ci
    environment:
      emacs: 27.1-alpine-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-3:
    runs-on: ubuntu-latest
    environment:
      emacs: '26.3'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-3-ci:
    runs-on: ubuntu-latest
    needs: img-26-3
    environment:
      emacs: 26.3-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-3-ci-cask:
    runs-on: ubuntu-latest
    needs: img-26-3-ci
    environment:
      emacs: 26.3-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-3-ci-eask:
    runs-on: ubuntu-latest
    needs: img-26-3-ci
    environment:
      emacs: 26.3-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-3-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-26-3-ci
    environment:
      emacs: 26.3-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-3-ci-keg:
    runs-on: ubuntu-latest
    needs: img-26-3-ci
    environment:
      emacs: 26.3-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-3-alpine:
    runs-on: ubuntu-latest
    environment:
      emacs: 26.3-alpine
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-3-alpine-ci:
    runs-on: ubuntu-latest
    needs: img-26-3-alpine
    environment:
      emacs: 26.3-alpine-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-3-alpine-ci-cask:
    runs-on: ubuntu-latest
    needs: img-26-3-alpine-ci
    environment:
      emacs: 26.3-alpine-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-3-alpine-ci-eask:
    runs-on: ubuntu-latest
    needs: img-26-3-alpine-ci
    environment:
      emacs: 26.3-alpine-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-3-alpine-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-26-3-alpine-ci
    environment:
      emacs: 26.3-alpine-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-3-alpine-ci-keg:
    runs-on: ubuntu-latest
    needs: img-26-3-alpine-ci
    environment:
      emacs: 26.3-alpine-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-2:
    runs-on: ubuntu-latest
    environment:
      emacs: '26.2'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-2-ci:
    runs-on: ubuntu-latest
    needs: img-26-2
    environment:
      emacs: 26.2-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-2-ci-cask:
    runs-on: ubuntu-latest
    needs: img-26-2-ci
    environment:
      emacs: 26.2-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-2-ci-eask:
    runs-on: ubuntu-latest
    needs: img-26-2-ci
    environment:
      emacs: 26.2-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-2-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-26-2-ci
    environment:
      emacs: 26.2-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-2-ci-keg:
    runs-on: ubuntu-latest
    needs: img-26-2-ci
    environment:
      emacs: 26.2-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-2-alpine:
    runs-on: ubuntu-latest
    environment:
      emacs: 26.2-alpine
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-2-alpine-ci:
    runs-on: ubuntu-latest
    needs: img-26-2-alpine
    environment:
      emacs: 26.2-alpine-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-2-alpine-ci-cask:
    runs-on: ubuntu-latest
    needs: img-26-2-alpine-ci
    environment:
      emacs: 26.2-alpine-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-2-alpine-ci-eask:
    runs-on: ubuntu-latest
    needs: img-26-2-alpine-ci
    environment:
      emacs: 26.2-alpine-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-2-alpine-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-26-2-alpine-ci
    environment:
      emacs: 26.2-alpine-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-2-alpine-ci-keg:
    runs-on: ubuntu-latest
    needs: img-26-2-alpine-ci
    environment:
      emacs: 26.2-alpine-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-1:
    runs-on: ubuntu-latest
    environment:
      emacs: '26.1'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-1-ci:
    runs-on: ubuntu-latest
    needs: img-26-1
    environment:
      emacs: 26.1-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-1-ci-cask:
    runs-on: ubuntu-latest
    needs: img-26-1-ci
    environment:
      emacs: 26.1-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-1-ci-eask:
    runs-on: ubuntu-latest
    needs: img-26-1-ci
    environment:
      emacs: 26.1-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-1-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-26-1-ci
    environment:
      emacs: 26.1-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-1-ci-keg:
    runs-on: ubuntu-latest
    needs: img-26-1-ci
    environment:
      emacs: 26.1-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-1-alpine:
    runs-on: ubuntu-latest
    environment:
      emacs: 26.1-alpine
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-1-alpine-ci:
    runs-on: ubuntu-latest
    needs: img-26-1-alpine
    environment:
      emacs: 26.1-alpine-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-1-alpine-ci-cask:
    runs-on: ubuntu-latest
    needs: img-26-1-alpine-ci
    environment:
      emacs: 26.1-alpine-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-1-alpine-ci-eask:
    runs-on: ubuntu-latest
    needs: img-26-1-alpine-ci
    environment:
      emacs: 26.1-alpine-ci-eask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-1-alpine-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-26-1-alpine-ci
    environment:
      emacs: 26.1-alpine-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-26-1-alpine-ci-keg:
    runs-on: ubuntu-latest
    needs: img-26-1-alpine-ci
    environment:
      emacs: 26.1-alpine-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-3:
    runs-on: ubuntu-latest
    environment:
      emacs: '25.3'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-3-ci:
    runs-on: ubuntu-latest
    needs: img-25-3
    environment:
      emacs: 25.3-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-3-ci-cask:
    runs-on: ubuntu-latest
    needs: img-25-3-ci
    environment:
      emacs: 25.3-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-3-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-25-3-ci
    environment:
      emacs: 25.3-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-3-ci-keg:
    runs-on: ubuntu-latest
    needs: img-25-3-ci
    environment:
      emacs: 25.3-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-3-alpine:
    runs-on: ubuntu-latest
    environment:
      emacs: 25.3-alpine
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-3-alpine-ci:
    runs-on: ubuntu-latest
    needs: img-25-3-alpine
    environment:
      emacs: 25.3-alpine-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-3-alpine-ci-cask:
    runs-on: ubuntu-latest
    needs: img-25-3-alpine-ci
    environment:
      emacs: 25.3-alpine-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-3-alpine-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-25-3-alpine-ci
    environment:
      emacs: 25.3-alpine-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-3-alpine-ci-keg:
    runs-on: ubuntu-latest
    needs: img-25-3-alpine-ci
    environment:
      emacs: 25.3-alpine-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-2:
    runs-on: ubuntu-latest
    environment:
      emacs: '25.2'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-2-ci:
    runs-on: ubuntu-latest
    needs: img-25-2
    environment:
      emacs: 25.2-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-2-ci-cask:
    runs-on: ubuntu-latest
    needs: img-25-2-ci
    environment:
      emacs: 25.2-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-2-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-25-2-ci
    environment:
      emacs: 25.2-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-2-ci-keg:
    runs-on: ubuntu-latest
    needs: img-25-2-ci
    environment:
      emacs: 25.2-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-2-alpine:
    runs-on: ubuntu-latest
    environment:
      emacs: 25.2-alpine
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-2-alpine-ci:
    runs-on: ubuntu-latest
    needs: img-25-2-alpine
    environment:
      emacs: 25.2-alpine-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-2-alpine-ci-cask:
    runs-on: ubuntu-latest
    needs: img-25-2-alpine-ci
    environment:
      emacs: 25.2-alpine-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-2-alpine-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-25-2-alpine-ci
    environment:
      emacs: 25.2-alpine-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-2-alpine-ci-keg:
    runs-on: ubuntu-latest
    needs: img-25-2-alpine-ci
    environment:
      emacs: 25.2-alpine-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-1:
    runs-on: ubuntu-latest
    environment:
      emacs: '25.1'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-1-ci:
    runs-on: ubuntu-latest
    needs: img-25-1
    environment:
      emacs: 25.1-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-1-ci-cask:
    runs-on: ubuntu-latest
    needs: img-25-1-ci
    environment:
      emacs: 25.1-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-1-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-25-1-ci
    environment:
      emacs: 25.1-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-1-ci-keg:
    runs-on: ubuntu-latest
    needs: img-25-1-ci
    environment:
      emacs: 25.1-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-1-alpine:
    runs-on: ubuntu-latest
    environment:
      emacs: 25.1-alpine
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-1-alpine-ci:
    runs-on: ubuntu-latest
    needs: img-25-1-alpine
    environment:
      emacs: 25.1-alpine-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-1-alpine-ci-cask:
    runs-on: ubuntu-latest
    needs: img-25-1-alpine-ci
    environment:
      emacs: 25.1-alpine-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-1-alpine-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-25-1-alpine-ci
    environment:
      emacs: 25.1-alpine-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-25-1-alpine-ci-keg:
    runs-on: ubuntu-latest
    needs: img-25-1-alpine-ci
    environment:
      emacs: 25.1-alpine-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-5:
    runs-on: ubuntu-latest
    environment:
      emacs: '24.5'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-5-ci:
    runs-on: ubuntu-latest
    needs: img-24-5
    environment:
      emacs: 24.5-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-5-ci-cask:
    runs-on: ubuntu-latest
    needs: img-24-5-ci
    environment:
      emacs: 24.5-ci-cask
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-5-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-24-5-ci
    environment:
      emacs: 24.5-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-5-ci-keg:
    runs-on: ubuntu-latest
    needs: img-24-5-ci
    environment:
      emacs: 24.5-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-4:
    runs-on: ubuntu-latest
    environment:
      emacs: '24.4'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-4-ci:
    runs-on: ubuntu-latest
    needs: img-24-4
    environment:
      emacs: 24.4-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-4-ci-eldev:
    runs-on: ubuntu-latest
    needs: img-24-4-ci
    environment:
      emacs: 24.4-ci-eldev
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-4-ci-keg:
    runs-on: ubuntu-latest
    needs: img-24-4-ci
    environment:
      emacs: 24.4-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-3:
    runs-on: ubuntu-latest
    environment:
      emacs: '24.3'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-3-ci:
    runs-on: ubuntu-latest
    needs: img-24-3
    environment:
      emacs: 24.3-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-3-ci-keg:
    runs-on: ubuntu-latest
    needs: img-24-3-ci
    environment:
      emacs: 24.3-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-2:
    runs-on: ubuntu-latest
    environment:
      emacs: '24.2'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-2-ci:
    runs-on: ubuntu-latest
    needs: img-24-2
    environment:
      emacs: 24.2-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-2-ci-keg:
    runs-on: ubuntu-latest
    needs: img-24-2-ci
    environment:
      emacs: 24.2-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-1:
    runs-on: ubuntu-latest
    environment:
      emacs: '24.1'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-1-ci:
    runs-on: ubuntu-latest
    needs: img-24-1
    environment:
      emacs: 24.1-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-24-1-ci-keg:
    runs-on: ubuntu-latest
    needs: img-24-1-ci
    environment:
      emacs: 24.1-ci-keg
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-23-4:
    runs-on: ubuntu-latest
    environment:
      emacs: '23.4'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
  img-23-4-ci:
    runs-on: ubuntu-latest
    needs: img-23-4
    environment:
      emacs: 23.4-ci
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Log in to the Container registry
      uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      with:
        registry: labs.phundrak.com
        username: ${{ gitea.actor }}
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
    - name: Set environment
      shell: bash
      run: |
        yq() { docker run --rm -i -v "${PWD}":/workdir mikefarah/yq "$@"; }
        VERSION=${{ env.emacs }}
        tags=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags | join (\", phundrak/emacs:\")" images.yml)
        version=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .version" images.yml)
        cache=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .tags[0]" images.yml)
        template=$(yq ".[] | select(.tags[0] == \"$VERSION\") | .template" images.yml)
        echo "image_tags=phundrak/emacs:$tags" >> $GITEA_ENV
        echo "image_cache=phundrak/emacs:$cache" >> $GITEA_ENV
        echo "image_context=$version/$template" >> $GITEA_ENV
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        pull: true
        push: ${{ gitea.ref == 'refs/heads/master' }}
        tags: ${{ env.image_tags }}
        context: ${{ env.image_context }}
